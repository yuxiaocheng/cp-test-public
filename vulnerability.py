from Cryptodome.Cipher import DES, DES3, ARC2, ARC4, Blowfish, AES
from Cryptodome.Random import get_random_bytes
from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes
from Crypto.Util.Padding import pad, unpad
from cryptography.hazmat.primitives.asymmetric import rsa, ec, dsa
from Cryptodome.Cipher import AES, PKCS1_OAEP,  PKCS1_v1_5
from Cryptodome.Random import get_random_bytes
from Cryptodome.PublicKey import RSA
from jinja2 import Environment
import tempfile
import ldap

def init_ldap():
   connect = ldap.initialize('ldap://example:1389')

   connect.simple_bind('cn=root') 
   connect.simple_bind_s('cn=root') 
   connect.bind_s('cn=root', None) 
   connect.bind('cn=root', None) 



   
filename = tempfile.mktemp() 
tmp_file = open(filename, "w+")

env = Environment() 
env = Environment(autoescape=False) 

# Example for a symmetric cipher: AES
AES.new(key, AES.MODE_ECB)  
AES.new(key, AES.MODE_CBC)  

